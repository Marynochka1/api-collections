{
	"info": {
		"_postman_id": "ad40af5c-9d4b-467d-af61-feb5911ed1fb",
		"name": "Maryna Kopytina Star Wars",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20313848"
	},
	"item": [
		{
			"name": "Task 1",
			"item": [
				{
					"name": "Get Luke Skywalker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"The person is Luke\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Luke Skywalker\");\r",
									"});\r",
									"pm.test(\"Extract Luke's homeworld\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"homeworld\", jsonData.homeworld);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"baseUrl\", \"https://swapi.dev/api/\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}people/1",
							"host": [
								"{{baseUrl}}people"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Luke's homeworld",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Name of planet is Tatooine\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Tatooine\");\r",
									"});\r",
									"pm.test(\"Population of planet is 200000\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.population).to.eql(\"200000\");\r",
									"});\r",
									"pm.test(\"Extract film URL â„– 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"film\", jsonData.films[0]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{homeworld}}",
							"host": [
								"{{homeworld}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Film A New Hope",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Title of film is A New Hope\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(\"A New Hope\");\r",
									"});\r",
									"pm.test(\"Luke Skywalker's film\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.characters[0]).to.eql(\"https://swapi.dev/api/people/1/\");\r",
									"});\r",
									"pm.test(\"Luke Skywalker's planet\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.planets[0]).to.eql(\"https://swapi.dev/api/planets/1/\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{film}}",
							"host": [
								"{{film}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task 2",
			"item": [
				{
					"name": "Get Republic attack cruiser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Name of of starship is republic attack cruiser\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.results[0].name).to.eql(\"Republic attack cruiser\");\r",
									"});\r",
									"pm.test(\"Extract film URL of republic attack cruiser\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"FilmURL\", jsonData.results[0].films[0]);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"baseUrl\", \"https://swapi.dev/api/\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}starships/?search=Republic attack cruiser",
							"host": [
								"{{baseUrl}}starships"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "search",
									"value": "Republic attack cruiser"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Films URL of Republic attack cruiser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Data of release film is 2005-05-19\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.release_date).to.eql(\"2005-05-19\");\r",
									"});\r",
									"pm.test(\"Extract title of film\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"Title\", jsonData.title);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{FilmURL}}",
							"host": [
								"{{FilmURL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Title of Revenge of the Sith",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Title of the film is Revenge of the Sith \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.results[0].title).to.eql(\"Revenge of the Sith\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}films/?search={{Title}}",
							"host": [
								"{{baseUrl}}films"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "search",
									"value": "{{Title}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task 3",
			"item": [
				{
					"name": "Get T-16 skyhopper",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Name of T-16 skyhopper \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.results[0].name).to.eql(\"T-16 skyhopper\");\r",
									"});\r",
									"pm.test(\"Atmosphering speed\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.results[0].max_atmosphering_speed).to.eql(\"1200\");\r",
									"});\r",
									"pm.test(\"Films of T-16 skyhopper\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"films\", jsonData.results[0].films[0]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"baseUrl\", \"https://swapi.dev/api/\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}vehicles/?search=T-16 skyhopper",
							"host": [
								"{{baseUrl}}vehicles"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "search",
									"value": "T-16 skyhopper"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get film of T-16 skyhopper",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Species is 5\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.species[5])\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{films}}",
							"host": [
								"{{films}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get species 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									"pm.test(\"Name of species 5 is Hutt\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Hutt\");\r",
									"});\r",
									"pm.test(\"The colors eye of this rase is yellow, red\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.eye_colors).to.eql(\"yellow, red\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}species/5/",
							"host": [
								"{{baseUrl}}species"
							],
							"path": [
								"5",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "homeworld",
			"value": ""
		},
		{
			"key": "film1",
			"value": ""
		},
		{
			"key": "film",
			"value": ""
		},
		{
			"key": "films",
			"value": ""
		},
		{
			"key": "FilmURL",
			"value": ""
		},
		{
			"key": "release_date",
			"value": ""
		},
		{
			"key": "Title",
			"value": ""
		},
		{
			"key": "characters",
			"value": ""
		},
		{
			"key": "Revenge of the Sith",
			"value": ""
		}
	]
}